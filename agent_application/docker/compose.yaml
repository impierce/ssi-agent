name: ssi-agent

services:
  cqrs-postgres-db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
    volumes:
      - "./db:/docker-entrypoint-initdb.d"

  pg-admin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5433:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - "./db/pgadmin4/servers.json:/pgadmin4/servers.json"
    depends_on:
      - cqrs-postgres-db

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: grafana
    volumes:
      - ./monitoring/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./monitoring/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards

  ssi-agent:
    #image: ssi-agent
    container_name: ssi-agent
    build:
      context: ../..
      dockerfile: ./agent_application/docker/Dockerfile
    ports:
      - 3033:3033
    environment:
      # AGENT_CONFIG_LOG_FORMAT: json
      AGENT_CONFIG_EVENT_STORE: postgres
      # AGENT_CONFIG_BASE_PATH: "unicore"
      AGENT_APPLICATION_URL: ${AGENT_APPLICATION_URL}
      AGENT_STORE_DB_CONNECTION_STRING: postgresql://demo_user:demo_pass@cqrs-postgres-db:5432/demo
      AGENT_SECRET_MANAGER_STRONGHOLD_PATH: /app/res/stronghold

      AGENT_CONFIG_STRONGHOLD_PASSWORD: "VNvRtH4tKyWwvJDpL6Vuc2aoLiKAecGQ"
      AGENT_CONFIG_ISSUER_KEY_ID: "UVDxWhG2rB39FkaR7I27mHeUNrGtUgcr"

      # Uncomment the following lines to use the DID method `did:iota:rms`
      # AGENT_CONFIG_ISSUER_DID: "did:iota:rms:0x42ad588322e58b3c07aa39e4948d021ee17ecb5747915e9e1f35f028d7ecaf90"
      # AGENT_CONFIG_ISSUER_FRAGMENT: "bQKQRzaop7CgEvqVq8UlgLGsdF-R-hnLFkKFZqW2VN0"
      # AGENT_CONFIG_DEFAULT_DID_METHOD: "did:iota:rms"
    volumes:
      - ../../agent_secret_manager/tests/res/selv.stronghold:/app/res/stronghold
      - ../../agent_event_publisher_http/config.yml:/app/agent_event_publisher_http/config.yml
      - ../../agent_verification/presentation_definitions:/app/agent_verification/presentation_definitions
      # TODO: Remove this. This is a workaround that ensures that the `agent_verification/presentation_definitions`
      # folder can be accessed by the agent from the `fn authorization_requests` endpoint.
      - ./tmp:/app/agent_api_rest
